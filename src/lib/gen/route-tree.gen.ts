/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './../../routes/__root'
import { Route as shellLayoutImport } from './../../routes/(shell)/layout'
import { Route as shellPageImport } from './../../routes/(shell)/page'
import { Route as shellHomePageImport } from './../../routes/(shell)/home/page'
import { Route as shellAboutPageImport } from './../../routes/(shell)/about/page'

// Create/Update Routes

const shellLayoutRoute = shellLayoutImport.update({
  id: '/(shell)',
  getParentRoute: () => rootRoute,
} as any)

const shellPageRoute = shellPageImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => shellLayoutRoute,
} as any)

const shellHomePageRoute = shellHomePageImport.update({
  id: '/home/',
  path: '/home/',
  getParentRoute: () => shellLayoutRoute,
} as any)

const shellAboutPageRoute = shellAboutPageImport.update({
  id: '/about/',
  path: '/about/',
  getParentRoute: () => shellLayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(shell)': {
      id: '/(shell)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof shellLayoutImport
      parentRoute: typeof rootRoute
    }
    '/(shell)/': {
      id: '/(shell)/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof shellPageImport
      parentRoute: typeof shellLayoutImport
    }
    '/(shell)/about/': {
      id: '/(shell)/about/'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof shellAboutPageImport
      parentRoute: typeof shellLayoutImport
    }
    '/(shell)/home/': {
      id: '/(shell)/home/'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof shellHomePageImport
      parentRoute: typeof shellLayoutImport
    }
  }
}

// Create and export the route tree

interface shellLayoutRouteChildren {
  shellPageRoute: typeof shellPageRoute
  shellAboutPageRoute: typeof shellAboutPageRoute
  shellHomePageRoute: typeof shellHomePageRoute
}

const shellLayoutRouteChildren: shellLayoutRouteChildren = {
  shellPageRoute: shellPageRoute,
  shellAboutPageRoute: shellAboutPageRoute,
  shellHomePageRoute: shellHomePageRoute,
}

const shellLayoutRouteWithChildren = shellLayoutRoute._addFileChildren(
  shellLayoutRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof shellPageRoute
  '/about': typeof shellAboutPageRoute
  '/home': typeof shellHomePageRoute
}

export interface FileRoutesByTo {
  '/': typeof shellPageRoute
  '/about': typeof shellAboutPageRoute
  '/home': typeof shellHomePageRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/(shell)': typeof shellLayoutRouteWithChildren
  '/(shell)/': typeof shellPageRoute
  '/(shell)/about/': typeof shellAboutPageRoute
  '/(shell)/home/': typeof shellHomePageRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/about' | '/home'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/about' | '/home'
  id:
    | '__root__'
    | '/(shell)'
    | '/(shell)/'
    | '/(shell)/about/'
    | '/(shell)/home/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  shellLayoutRoute: typeof shellLayoutRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  shellLayoutRoute: shellLayoutRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/(shell)"
      ]
    },
    "/(shell)": {
      "filePath": "(shell)/layout.tsx",
      "children": [
        "/(shell)/",
        "/(shell)/about/",
        "/(shell)/home/"
      ]
    },
    "/(shell)/": {
      "filePath": "(shell)/page.tsx",
      "parent": "/(shell)"
    },
    "/(shell)/about/": {
      "filePath": "(shell)/about/page.tsx",
      "parent": "/(shell)"
    },
    "/(shell)/home/": {
      "filePath": "(shell)/home/page.tsx",
      "parent": "/(shell)"
    }
  }
}
ROUTE_MANIFEST_END */
